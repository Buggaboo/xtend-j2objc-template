/*
 * Copyright (c) 2015 the authors of j2objc-gradle (see AUTHORS file)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Java to Objective C step (originally from Xtend)

apply plugin: 'com.github.j2objccontrib.j2objcgradle'
apply plugin: 'java'
apply plugin: 'org.xtext.xtend'
apply from: '../../Xtendroid/dependencies.gradle'

buildscript {scriptHandler->                                                                                               
    apply from: '../../Xtendroid/repositories.gradle', to: scriptHandler
    apply from: '../../Xtendroid/dependencies.gradle'
    dependencies {
        classpath(project.ext.build.xtext_gradle)
    }
}


def GUAVA_VER = '19.0'
def OKIO_VER = '1.6.0'
def OKHTTP_VER = '3.2.0'


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

// Dude, where are my jars?
def j2objc_libs = properties.getProperty('j2objc.home') + '/lib'

dependencies {

    testCompile 'junit:junit:4.12'

    compile     'org.json:json:20160212'

    // missing j2objc-1.0.1 deps?
    compile     'org.codehaus.mojo:animal-sniffer-annotations:1.14'
    compile     'com.google.j2objc:j2objc-annotations:0.9.8'
    compile     'com.google.code.findbugs:jsr305:3.0.1'
    compile     "com.google.guava:guava:${GUAVA_VER}"
    compile     (project.ext.lib.xtend)

    j2objcTranslation "com.google.guava:guava:${GUAVA_VER}:sources"

    // libraries I'm experimenting with
    compile     "com.squareup.okio:okio:${OKIO_VER}"
    compile     "com.squareup.okhttp3:okhttp:${OKHTTP_VER}"

    compile     (project.ext.lib.xtend)

    // Attempt to make okHttp build
    compile     'org.codehaus.mojo:animal-sniffer-annotations:1.14'
    compile     fileTree(dir: j2objc_libs, include: ['*.jar'])


    // TODO add a task to scrub the libraries from android specific functions
    // even if jre_emul.jar, does support them for some reason
    // I don't really understand the discussion [here](https://github.com/j2objc-contrib/j2objc-gradle/issues/181):
    /* for file in $(find . -name '*.java' -exec grep -l Log.d {} \;); do echo sed -i -e '/Log.d/d;/import android/d' $file; done */

    j2objcTranslation "com.squareup.okio:okio:${OKIO_VER}:sources"
    j2objcTranslation "com.squareup.okhttp3:okhttp:${OKHTTP_VER}:sources"


    j2objcTranslation "org.eclipse.xtend:org.eclipse.xtend.lib.macro:${project.ext.xtend_lib_ver}:sources"
    j2objcTranslation "org.eclipse.xtext:org.eclipse.xtext.xbase.lib:${project.ext.xtend_lib_ver}:sources"
    j2objcTranslation "org.eclipse.xtend:org.eclipse.xtend.lib:${project.ext.xtend_lib_ver}:sources"
}

test {
  testLogging.showStandardStreams = true
}

// In case of: [superClassName is empty!](http://stackoverflow.com/questions/14814837/gradle-test-fails-with-error)
tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}

j2objcConfig {
    // This should eventually become the default but doesn't have any use within this example
    autoConfigureDeps true

//    translateArgs '--ignore-missing-imports' // no longer supported

    // Xcode
    xcodeProjectDir '../ios'
    xcodeTargetsIos 'IOS-APP', 'IOS-APPTests'
    xcodeTargetsOsx 'OSX-APP', 'OSX-APPTests'
    // TODO: xcodeTargetsWatchos 'WATCH-APP', 'WATCH-APPTests'

    // For testing on the iPhone 5 simulator
    supportedArchs += ['ios_i386']

    finalConfigure()
}
